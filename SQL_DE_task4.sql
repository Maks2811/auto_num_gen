
-- Создаем таблицу с 12 допустимыми в гос. номерах буквами
CREATE TABLE IF NOT EXISTS test.letters
(letter CHAR(1));

-- Заполняем таблицу буквами
INSERT INTO test.letters VALUES
('А'),
('В'),
('Е'),
('К'),
('М'),
('Н'),
('О'),
('Р'),
('С'),
('Т'),
('У'),
('Х');


-- Создаем таблицу с цифрами
CREATE TABLE IF NOT EXISTS test.digits
(digit CHAR(1));

-- Заполняем таблицу цифрами
INSERT INTO test.digits VALUES
('0'),
('1'),
('2'),
('3'),
('4'),
('5'),
('6'),
('7'),
('8'),
('9');

-- Создаем таблицу с регионами
CREATE TABLE IF NOT EXISTS test.regions
(region VARCHAR(3),
region_name VARCHAR(50)
);

-- Заполняем таблицу регионами
INSERT INTO test.regions VALUES
('01', 'Республика Адыгея (Адыгея)'),
('02', 'Республика Башкортостан'),
(102, 'Республика Башкортостан'),
(702, 'Республика Башкортостан'),
('03', 'Республика Бурятия'),
('04', 'Республика Алтай'),
('05', 'Республика Дагестан'),
('06', 'Республика Ингушетия'),
('07', 'Кабардино-Балкарская Республика'),
('08', 'Республика Калмыкия'),
('09', 'Карачаево-Черкесская Республика'),
(10, 'Республика Карелия'),
(11, 'Республика Коми'),
(12, 'Республика Марий Эл'),
(13, 'Республика Мордовия'),
(113, 'Республика Мордовия'),
(14, 'Республика Саха (Якутия)'),
(15, 'Республика Северная Осетия — Алания'),
(16, 'Республика Татарстан (Татарстан)'),
(116, 'Республика Татарстан (Татарстан)'),
(716, 'Республика Татарстан (Татарстан)'),
(17, 'Республика Тыва'),
(18, 'Удмуртская Республика'),
(19, 'Республика Хакасия'),
(21, 'Чувашская Республика (Чувашия)'),
(121, 'Чувашская Республика (Чувашия)'),
(22, 'Алтайский край'),
(23, 'Краснодарский край'),
(93, 'Краснодарский край'),
(123, 'Краснодарский край'),
(193, 'Краснодарский край'),
(24, 'Красноярский край'),
(124, 'Красноярский край'),
(25, 'Приморский край'),
(125, 'Приморский край'),
(26, 'Ставропольский край'),
(126, 'Ставропольский край'),
(27, 'Хабаровский край'),
(28, 'Амурская область'),
(29, 'Архангельская область'),
(30, 'Астраханская область'),
(31, 'Белгородская область'),
(32, 'Брянская область'),
(33, 'Владимирская область'),
(34, 'Волгоградская область'),
(134, 'Волгоградская область'),
(35, 'Вологодская область'),
(36, 'Воронежская область'),
(136, 'Воронежская область'),
(37, 'Ивановская область'),
(38, 'Иркутская область'),
(138, 'Иркутская область'),
(39, 'Калининградская область'),
(40, 'Калужская область'),
(41, 'Камчатский край'),
(42, 'Кемеровская область'),
(142, 'Кемеровская область'),
(43, 'Кировская область'),
(44, 'Костромская область'),
(45, 'Курганская область'),
(46, 'Курская область'),
(47, 'Ленинградская область'),
(147, 'Ленинградская область'),
(48, 'Липецкая область'),
(49, 'Магаданская область'),
(50, 'Московская область'),
(90, 'Московская область'),
(150, 'Московская область'),
(190, 'Московская область'),
(750, 'Московская область'),
(790, 'Московская область'),
(51, 'Мурманская область'),
(52, 'Нижегородская область'),
(152, 'Нижегородская область'),
(53, 'Новгородская область'),
(54, 'Новосибирская область'),
(154, 'Новосибирская область'),
(55, 'Омская область'),
(155, 'Омская область'),
(56, 'Оренбургская область'),
(156, 'Оренбургская область'),
(57, 'Орловская область'),
(58, 'Пензенская область'),
(59, 'Пермский край'),
(159, 'Пермский край'),
(60, 'Псковская область'),
(61, 'Ростовская область'),
(161, 'Ростовская область'),
(761, 'Ростовская область'),
(62, 'Рязанская область'),
(63, 'Самарская область'),
(163, 'Самарская область'),
(763, 'Самарская область'),
(64, 'Саратовская область'),
(164, 'Саратовская область'),
(65, 'Сахалинская область'),
(66, 'Свердловская область'),
(96, 'Свердловская область'),
(196, 'Свердловская область'),
(67, 'Смоленская область'),
(68, 'Тамбовская область'),
(69, 'Тверская область'),
(70, 'Томская область'),
(71, 'Тульская область'),
(72, 'Тюменская область'),
(73, 'Ульяновская область'),
(173, 'Ульяновская область'),
(74, 'Челябинская область'),
(174, 'Челябинская область'),
(75, 'Забайкальский край'),
(76, 'Ярославская область'),
(77, 'Москва'),
(97, 'Москва'),
(99, 'Москва'),
(177, 'Москва'),
(197, 'Москва'),
(199, 'Москва'),
(777, 'Москва'),
(797, 'Москва'),
(799, 'Москва'),
(78, 'Санкт-Петербург'),
(98, 'Санкт-Петербург'),
(178, 'Санкт-Петербург'),
(198, 'Санкт-Петербург'),
(79, 'Еврейская автономная область'),
(80, 'Донецкая Народная Республика'),
(81, 'Луганская Народная Республика'),
(82, 'Республика Крым'),
(83, 'Ненецкий автономный округ'),
(84, 'Херсонская область'),
(184, 'Херсонская область'),
(85, 'Запорожская область'),
(185, 'Запорожская область'),
(86, 'Ханты-Мансийский автономный округ — Югра'),
(186, 'Ханты-Мансийский автономный округ — Югра'),
(87, 'Чукотский автономный округ'),
(89, 'Ямало-Ненецкий автономный округ'),
(92, 'Севастополь'),
(95, 'Чеченская республика'),
(94, 'Байконур'),
(188, 'Харьковская область');


-- генерируем номера автомобилей
SELECT CONCAT(letter1, digit1, digit2, digit3, letter2, letter3, region) AS vehicle_number, region_name FROM 
(SELECT l1.letter AS letter1, d1.digit AS digit1, d2.digit AS digit2, d3.digit AS digit3, l2.letter AS letter2, l3.letter AS letter3, r.region AS region, r.region_name AS region_name
FROM
test.letters l1 
CROSS JOIN test.digits d1
CROSS JOIN test.digits d2
CROSS JOIN test.digits d3
CROSS JOIN test.letters l2
CROSS JOIN test.letters l3
CROSS JOIN test.regions r )
WHERE CONCAT(letter1, digit1, digit2, digit3, letter2, letter3, region) NOT LIKE '_000%'
;


-- генерируем номера такси, автобусов 
SELECT CONCAT(letter1, letter2, digit1, digit2, digit3, region) AS vehicle_number, region_name FROM 
(SELECT l1.letter AS letter1, l2.letter AS letter2, d1.digit AS digit1, d2.digit AS digit2, d3.digit AS digit3, r.region AS region, r.region_name AS region_name
FROM
test.letters l1
CROSS JOIN test.letters l2
CROSS JOIN test.digits d1
CROSS JOIN test.digits d2
CROSS JOIN test.digits d3
CROSS JOIN test.regions r )
WHERE CONCAT(letter1, letter2, digit1, digit2, digit3,  region) NOT LIKE '__000%'
;


-- генерируем номера прицепов
SELECT CONCAT(letter1, letter2, digit1, digit2, digit3, digit4, region) AS vehicle_number, region_name FROM 
(SELECT l1.letter AS letter1, l2.letter AS letter2, d1.digit AS digit1, d2.digit AS digit2, d3.digit AS digit3, d4.digit AS digit4, r.region AS region, r.region_name AS region_name
FROM
test.letters l1
CROSS JOIN test.letters l2
CROSS JOIN test.digits d1
CROSS JOIN test.digits d2
CROSS JOIN test.digits d3
CROSS JOIN test.digits d4
CROSS JOIN test.regions r )
WHERE CONCAT(letter1, letter2, digit1, digit2, digit3, digit4, region) NOT LIKE '__0000%'
;


-- генерируем номера мотоциклов, тракторов
SELECT CONCAT(digit1, digit2, digit3, digit4, letter1, letter2, region) AS vehicle_number, region_name FROM 
(SELECT  d1.digit AS digit1, d2.digit AS digit2, d3.digit AS digit3, d4.digit AS digit4, l1.letter AS letter1, l2.letter AS letter2, r.region AS region, r.region_name AS region_name
FROM
test.digits d1
CROSS JOIN test.digits d2
CROSS JOIN test.digits d3
CROSS JOIN test.digits d4
CROSS JOIN test.letters l1
CROSS JOIN test.letters l2
CROSS JOIN test.regions r )
WHERE CONCAT(digit1, digit2, digit3, digit4, letter1, letter2, region) NOT LIKE '0000%'
;
